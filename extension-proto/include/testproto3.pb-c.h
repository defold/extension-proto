/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: testproto3.proto */

#ifndef PROTOBUF_C_testproto3_2eproto__INCLUDED
#define PROTOBUF_C_testproto3_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Testp3__Scalars Testp3__Scalars;
typedef struct Testp3__Outer Testp3__Outer;
typedef struct Testp3__Outer__Middle Testp3__Outer__Middle;
typedef struct Testp3__Outer__Middle__Inner Testp3__Outer__Middle__Inner;
typedef struct Testp3__Basic Testp3__Basic;
typedef struct Testp3__Container Testp3__Container;
typedef struct Testp3__Container__BasicMapEntry Testp3__Container__BasicMapEntry;
typedef struct Testp3__Container__StringMapEntry Testp3__Container__StringMapEntry;


/* --- enums --- */

typedef enum _Testp3__Language {
  TESTP3__LANGUAGE__LANGUAGE_LUA = 0,
  TESTP3__LANGUAGE__LANGUAGE_CPP = 1,
  TESTP3__LANGUAGE__LANGUAGE_JAVA = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(TESTP3__LANGUAGE)
} Testp3__Language;

/* --- messages --- */

/*
 * 
 * Multi-line comment
 */
struct  Testp3__Scalars
{
  ProtobufCMessage base;
  /*
   * all proto3 scalar values
   */
  int32_t i32;
  int64_t i64;
  uint32_t ui32;
  uint64_t ui64;
  int32_t si32;
  int64_t si64;
  uint32_t fix32;
  uint64_t fix64;
  int32_t sfix32;
  int64_t sfix64;
  protobuf_c_boolean b;
  /*
   * comment
   */
  char *s;
  ProtobufCBinaryData bytes;
  double d;
  float f;
};
#define TESTP3__SCALARS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__scalars__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (char *)protobuf_c_empty_string, {0,NULL}, 0, 0 }


struct  Testp3__Outer__Middle__Inner
{
  ProtobufCMessage base;
  char *text;
};
#define TESTP3__OUTER__MIDDLE__INNER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__outer__middle__inner__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Testp3__Outer__Middle
{
  ProtobufCMessage base;
  char *text;
  Testp3__Outer__Middle__Inner *inner;
};
#define TESTP3__OUTER__MIDDLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__outer__middle__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  Testp3__Outer
{
  ProtobufCMessage base;
  char *text;
  Testp3__Outer__Middle *middle;
};
#define TESTP3__OUTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__outer__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  Testp3__Basic
{
  ProtobufCMessage base;
  char *s;
  int32_t i;
  Testp3__Language lang;
};
#define TESTP3__BASIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__basic__descriptor) \
    , (char *)protobuf_c_empty_string, 0, TESTP3__LANGUAGE__LANGUAGE_LUA }


struct  Testp3__Container__BasicMapEntry
{
  ProtobufCMessage base;
  char *key;
  Testp3__Basic *value;
};
#define TESTP3__CONTAINER__BASIC_MAP_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__container__basic_map_entry__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  Testp3__Container__StringMapEntry
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define TESTP3__CONTAINER__STRING_MAP_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__container__string_map_entry__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Testp3__Container
{
  ProtobufCMessage base;
  size_t n_basic_map;
  Testp3__Container__BasicMapEntry **basic_map;
  size_t n_string_map;
  Testp3__Container__StringMapEntry **string_map;
  size_t n_repeated_string;
  char **repeated_string;
  size_t n_repeated_basic;
  Testp3__Basic **repeated_basic;
};
#define TESTP3__CONTAINER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&testp3__container__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/* Testp3__Scalars methods */
void   testp3__scalars__init
                     (Testp3__Scalars         *message);
size_t testp3__scalars__get_packed_size
                     (const Testp3__Scalars   *message);
size_t testp3__scalars__pack
                     (const Testp3__Scalars   *message,
                      uint8_t             *out);
size_t testp3__scalars__pack_to_buffer
                     (const Testp3__Scalars   *message,
                      ProtobufCBuffer     *buffer);
Testp3__Scalars *
       testp3__scalars__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   testp3__scalars__free_unpacked
                     (Testp3__Scalars *message,
                      ProtobufCAllocator *allocator);
/* Testp3__Outer__Middle__Inner methods */
void   testp3__outer__middle__inner__init
                     (Testp3__Outer__Middle__Inner         *message);
/* Testp3__Outer__Middle methods */
void   testp3__outer__middle__init
                     (Testp3__Outer__Middle         *message);
/* Testp3__Outer methods */
void   testp3__outer__init
                     (Testp3__Outer         *message);
size_t testp3__outer__get_packed_size
                     (const Testp3__Outer   *message);
size_t testp3__outer__pack
                     (const Testp3__Outer   *message,
                      uint8_t             *out);
size_t testp3__outer__pack_to_buffer
                     (const Testp3__Outer   *message,
                      ProtobufCBuffer     *buffer);
Testp3__Outer *
       testp3__outer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   testp3__outer__free_unpacked
                     (Testp3__Outer *message,
                      ProtobufCAllocator *allocator);
/* Testp3__Basic methods */
void   testp3__basic__init
                     (Testp3__Basic         *message);
size_t testp3__basic__get_packed_size
                     (const Testp3__Basic   *message);
size_t testp3__basic__pack
                     (const Testp3__Basic   *message,
                      uint8_t             *out);
size_t testp3__basic__pack_to_buffer
                     (const Testp3__Basic   *message,
                      ProtobufCBuffer     *buffer);
Testp3__Basic *
       testp3__basic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   testp3__basic__free_unpacked
                     (Testp3__Basic *message,
                      ProtobufCAllocator *allocator);
/* Testp3__Container__BasicMapEntry methods */
void   testp3__container__basic_map_entry__init
                     (Testp3__Container__BasicMapEntry         *message);
/* Testp3__Container__StringMapEntry methods */
void   testp3__container__string_map_entry__init
                     (Testp3__Container__StringMapEntry         *message);
/* Testp3__Container methods */
void   testp3__container__init
                     (Testp3__Container         *message);
size_t testp3__container__get_packed_size
                     (const Testp3__Container   *message);
size_t testp3__container__pack
                     (const Testp3__Container   *message,
                      uint8_t             *out);
size_t testp3__container__pack_to_buffer
                     (const Testp3__Container   *message,
                      ProtobufCBuffer     *buffer);
Testp3__Container *
       testp3__container__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   testp3__container__free_unpacked
                     (Testp3__Container *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Testp3__Scalars_Closure)
                 (const Testp3__Scalars *message,
                  void *closure_data);
typedef void (*Testp3__Outer__Middle__Inner_Closure)
                 (const Testp3__Outer__Middle__Inner *message,
                  void *closure_data);
typedef void (*Testp3__Outer__Middle_Closure)
                 (const Testp3__Outer__Middle *message,
                  void *closure_data);
typedef void (*Testp3__Outer_Closure)
                 (const Testp3__Outer *message,
                  void *closure_data);
typedef void (*Testp3__Basic_Closure)
                 (const Testp3__Basic *message,
                  void *closure_data);
typedef void (*Testp3__Container__BasicMapEntry_Closure)
                 (const Testp3__Container__BasicMapEntry *message,
                  void *closure_data);
typedef void (*Testp3__Container__StringMapEntry_Closure)
                 (const Testp3__Container__StringMapEntry *message,
                  void *closure_data);
typedef void (*Testp3__Container_Closure)
                 (const Testp3__Container *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    testp3__language__descriptor;
extern const ProtobufCMessageDescriptor testp3__scalars__descriptor;
extern const ProtobufCMessageDescriptor testp3__outer__descriptor;
extern const ProtobufCMessageDescriptor testp3__outer__middle__descriptor;
extern const ProtobufCMessageDescriptor testp3__outer__middle__inner__descriptor;
extern const ProtobufCMessageDescriptor testp3__basic__descriptor;
extern const ProtobufCMessageDescriptor testp3__container__descriptor;
extern const ProtobufCMessageDescriptor testp3__container__basic_map_entry__descriptor;
extern const ProtobufCMessageDescriptor testp3__container__string_map_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_testproto3_2eproto__INCLUDED */
